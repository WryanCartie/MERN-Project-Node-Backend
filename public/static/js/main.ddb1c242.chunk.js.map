{"version":3,"sources":["shared/components/UIElements/LoadingSpinner.js","shared/context/auth-context.js","shared/components/UIElements/Card.js","shared/components/UIElements/Backdrop.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hooks.js","shared/components/UIElements/Modal.js","shared/hooks/auth-hooks.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["LoadingSpinner","props","className","asOverlay","AuthContext","createContext","isLoggedIn","userId","login","logout","token","Card","style","children","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","Button","href","size","inverse","danger","to","exact","type","disabled","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","evt","preventDefault","ModalOverlay","content","headerClass","onSubmit","event","preventDefaul","contentClass","footerClass","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","logoutTimer","Avatar","src","image","alt","width","height","UserItem","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","loadedUsers","setLoadedUsers","users","fetchUsers","MainHeader","NavLinks","Auth","useContext","SideDrawer","CSSTransition","classNames","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","NewPlace","React","lazy","UserPlaces","UpdatePlace","App","routes","setToken","setUserId","expirationTimer","setExpirationTimer","uid","expirationDate","tokenExpirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","storedData","parse","getItem","remainingTime","console","log","setTimeout","clearTimeout","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.ddb1c242.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  token: null\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Backdrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./Button.css\";\r\n\r\nconst Button = (props) => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || \"default\"} ${\r\n          props.inverse && \"button--inverse\"\r\n        } ${props.danger && \"button--danger\"}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || \"default\"} ${\r\n        props.inverse && \"button--inverse\"\r\n      } ${props.danger && \"button--danger\"}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = (evt) => {\r\n    evt.preventDefault();\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\n\r\nconst ModalOverlay = (props) => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefaul\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        className=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import {useState,useCallback,useEffect} from 'react'\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = ()=>{\r\n    const [token, setToken] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n    const [expirationTimer, setExpirationTimer] = useState();\r\n    const login = useCallback((uid, token, expirationDate) => {\r\n      setToken(token);\r\n      setUserId(uid);\r\n      const tokenExpirationDate =\r\n        expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n  \r\n      setExpirationTimer(tokenExpirationDate);\r\n      localStorage.setItem(\r\n        \"userData\",\r\n        JSON.stringify({\r\n          userId: uid,\r\n          token: token,\r\n          expiration: tokenExpirationDate.toISOString(),\r\n        })\r\n      );\r\n    }, []);\r\n    const logout = useCallback(() => {\r\n      setToken(null);\r\n      setUserId(null);\r\n      localStorage.removeItem('userData')\r\n      setExpirationTimer(null);\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (\r\n        storedData &&\r\n        storedData.token &&\r\n        new Date(storedData.expiration) > new Date()\r\n      ) {\r\n        login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n      }\r\n    }, [login]);\r\n    useEffect(() => {\r\n    \r\n      if (token && expirationTimer) {\r\n      \r\n        const remainingTime = expirationTimer.getTime() - new Date().getTime();\r\n        console.log(expirationTimer)\r\n        logoutTimer = setTimeout(logout, remainingTime);\r\n      }else{\r\n        clearTimeout(logoutTimer);\r\n      }\r\n    }, [token, logout, expirationTimer]);\r\n\r\n    return{token,login,logout,userId}\r\n}","import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = (props) => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.name}</h2>\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? \"Place\" : \"Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\n\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./UsersList.css\";\r\n\r\n\r\nconst UsersList = (props) => {\r\n\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hooks';\r\n\r\nconst Users = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL+'/users'\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const Auth = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {Auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${Auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {Auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!Auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {Auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={Auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./SideDrawer.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside onClick={props.onClick} className=\"side-drawer\">\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport \"./MainNavigation.css\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      {drawerIsOpen && (\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n          <nav className=\"main-navigation__drawer-nav\">\r\n            <NavLinks />\r\n          </nav>\r\n        </SideDrawer>\r\n      )}\r\n      <MainHeader>\r\n        <button\r\n          className=\"main-navigation__menu-btn\"\r\n          onClick={openDrawerHandler}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React,{  Suspense} from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hooks\";\r\nimport Users from \"./user/pages/Users\";\r\n\r\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\r\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\r\n\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\r\n\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n\r\n        <Route path=\"/places/:placeId\">\r\n          <UpdatePlace />\r\n        </Route>\r\n\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n\r\n        <Route path=\"/auth\" exact>\r\n          <Auth />\r\n        </Route>\r\n\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        login: login,\r\n        logout: logout,\r\n        isLoggedIn: !!token,\r\n        userId: userId,\r\n        token: token,\r\n      }}\r\n    >\r\n      <Router>\r\n        <MainNavigation />\r\n        <main>\r\n          <Suspense\r\n            fallback={\r\n              <div className=\"center\">\r\n                <LoadingSpinner />\r\n              </div>\r\n            }\r\n          > \r\n            {routes}\r\n          </Suspense>\r\n        </main>\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}